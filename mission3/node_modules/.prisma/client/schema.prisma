model Article {
  id        Int      @id @default(autoincrement())
  title     String?
  content   String
  createdAt DateTime @default(now())

  comments Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  name      String?  @unique
  title     String?
  type      String?
  content   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  productId Int?
  product   Product? @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  articleId Int?
  article   Article? @relation(fields: [articleId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Image {
  id   Int     @id @default(autoincrement())
  name String?

  productId Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Product {
  id          Int          @id @default(autoincrement())
  name        String
  description String?
  price       Int
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  productTags ProductTag[]
  comment     Comment[]
  image       Image[]
}

model ProductTag {
  id Int @id @default(autoincrement())

  productId Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  tagId Int
  tag   Tag @relation(fields: [tagId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([productId, tagId])
}

model Tag {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  productTags ProductTag[]
}

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
